---
title: Continuous gem dependency updating with Jenkins and Pull Request
description: |
  このトークでは Jenkins と GitHub の Pull Request を活用し、ライブラリのアップデート作業を省力化する方法について解説します。

  昨今の Ruby によるウェブアプリケーション開発ではライブラリの管理に Bundler が利用されます。
  Bundler はライブラリの依存関係やバージョンを賢く管理し、更新も bundle update コマンドのみで行える便利なツールです。
  しかし開発者は忙しいので、ライブラリのアップデート作業はしばしば忘れられたり、後回しにされます。
  すぐ目に見える価値を産む作業ではないので、作業時間を確保するために上司の理解を得るのが難しいこともあります。

  発表者もこのような状況に陥り、数カ月ぶりのアップデート作業に丸一日費やしてしまったり、
  検証が不十分で不具合を発生させてしまった苦い経験がありました。

  アップデート作業が滞る原因を分析したところ、

  * 仕事の忙しさや開発者のやる気の影響を受けやすいため一定した間隔でアップデート作業を実施するのが難しい
  * 日常のワークフローに組み込まれていない作業は面倒くさくてやらなくなってしまう
  * メールや IRC への通知だけではプレッシャーを感じないので無視されてしまう

  という問題があることがわかりました。

  そこで、 Jenkins と GitHub の Pull Request を使って上に挙げた問題を解決し、アップデート作業が滞らない仕組みを作りました。
  このトークでは、発表者がこれらの問題をどのように解決したのかを解説し、この方法が類似のものに対してどのような点で優れているか比較します。
notes: |
  このトークの内容は以下のブログ記事を詳しく説明したものになる予定です。

  Jenkins に bundle update した上で Pull Request させる - @kyanny's blog
  http://blog.kyanny.me/entry/2012/11/06/003902

  本発表では、大きくわけて二つのテーマについてお話したいと考えています。

  一つ目のテーマは、日々の作業をさらに省力化できる可能性がある、という内容です。
  これは、ソフトウェア開発をより良く行うことに関心があり、自動テストや継続的インテグレーションなどのプラクティスをすでに実践している人たちに向けたものです。
  発表者が体験した問題、実践した解決方法、その結果得たものを共有し、良いプラクティスを広めることが目的です。

  二つ目のテーマは、なぜ省力化する必要があるのか、という内容です。
  これは、まだ上記のようなプラクティスを実践しておらず、作業の省力化というテーマがピンとこない人たちに向けたものです。
  作業を省力化することで何が良くなるのか、ライブラリのアップデートという些細な (ビジネス価値の低そうな) 作業をわざわざ大掛かりな仕掛けで省力化する真の意義は何なのか、などについて説明し、省力化は良いことだという価値観を広めることが目的です。

  時間に余裕があれば、そもそもなぜライブラリをアップデートする必要があるのか、ということについても、アプリケーションの新鮮さを保つことがビジネス価値を高める（逆に、アプリケーションが老朽化するとビジネス価値を損なう）という話を盛り込みたいと考えています。

  また、既存の類似の方法 (bundle outdated や gemnasium) よりも発表者が実践した方法のほうが優れていると考える理由についても、 pendaxes というツールを社内で導入したこととその顛末 (発表者のチームではうまく機能しませんでした) を例に挙げつつ、日常のワークフローに組み込まれた方法か・適度に目立って目に見えるか・無視しづらいか、などの点から比較して述べます。

  さらに時間があれば、このプラクティスを導入した結果、発表者が副次的に得た「オープンソースへの貢献というちょっといいこと」体験談についてもお話します。
spoken_language: Japanese
speakers:
- name: Kensuke Nagae
  bio: |
    Kensuke Nagae is a Japanese software engineer.
    He is a developer of 30days Album (online photo sharing service) and Sqale (cloud application platform).
    He wants to be a cross-functional developer.
  company: paperboy&co., Inc.
  location: Tokyo, Japan
  gravatar: fffd8bf62b842a46803fb07792029fa4
  links:
    github: kyanny
    twitter: kyanny
